package com.ifrr.ticketing.swing;

import com.ifrr.ticketing.entities.Incidencia;
import com.ifrr.ticketing.service.ServiceIncidencia;
import com.ifrr.ticketing.service.ServiceUsuario;
import java.awt.Component;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.net.URL;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.Objects;
import javax.help.HelpBroker;
import javax.help.HelpSet;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author tarde
 */
public class GestorForm extends javax.swing.JFrame {

    /**
     * Creates new form Gestor
     */
    private final ServiceUsuario su;
    private final ServiceIncidencia si;
    private final Integer usuarioId;

    public GestorForm() {
        su = null;
        si = null;
        usuarioId = null;
        initComponents();
    }

    public GestorForm(ServiceUsuario su, ServiceIncidencia si, Integer usuarioId) {
        this.su = su;
        this.si = si;
        this.usuarioId = usuarioId;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        asignarTecnico = new javax.swing.JButton();
        jScrollPaneTablaGestor = new javax.swing.JScrollPane();
        tablita = new javax.swing.JTable();
        listarEnEspera = new javax.swing.JButton();
        listarPorTipo = new javax.swing.JButton();
        listarPorTecnico = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldTipo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldTecnicoListar = new javax.swing.JTextField();
        jTextFieldTecnicoAsignar = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        darDeAlta = new javax.swing.JButton();
        detallesIncidencia = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuAyuda = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("¡Bienvenido gestor!");
        jLabel2.setMaximumSize(new java.awt.Dimension(200, 200));
        jLabel2.setMinimumSize(new java.awt.Dimension(200, 200));
        jLabel2.setPreferredSize(new java.awt.Dimension(200, 200));

        asignarTecnico.setBackground(new java.awt.Color(153, 204, 255));
        asignarTecnico.setText("Asignar técnico");
        asignarTecnico.setMaximumSize(new java.awt.Dimension(163, 62));
        asignarTecnico.setMinimumSize(new java.awt.Dimension(163, 62));
        asignarTecnico.setPreferredSize(new java.awt.Dimension(163, 62));
        asignarTecnico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asignarTecnicoActionPerformed(evt);
            }
        });

        tablita.setBackground(new java.awt.Color(153, 204, 255));
        tablita.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Estado", "Desc."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPaneTablaGestor.setViewportView(tablita);
        updateTable(strFilter);

        listarEnEspera.setBackground(new java.awt.Color(153, 204, 255));
        listarEnEspera.setText("Incidencias en espera");
        listarEnEspera.setMaximumSize(new java.awt.Dimension(219, 54));
        listarEnEspera.setMinimumSize(new java.awt.Dimension(219, 54));
        listarEnEspera.setPreferredSize(new java.awt.Dimension(219, 54));
        listarEnEspera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listarEnEsperaActionPerformed(evt);
            }
        });

        listarPorTipo.setBackground(new java.awt.Color(153, 204, 255));
        listarPorTipo.setText("Incidencias por tipo");
        listarPorTipo.setMaximumSize(new java.awt.Dimension(219, 54));
        listarPorTipo.setMinimumSize(new java.awt.Dimension(219, 54));
        listarPorTipo.setPreferredSize(new java.awt.Dimension(219, 54));
        listarPorTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listarPorTipoActionPerformed(evt);
            }
        });

        listarPorTecnico.setBackground(new java.awt.Color(153, 204, 255));
        listarPorTecnico.setText("Incidencias por técnico");
        listarPorTecnico.setMaximumSize(new java.awt.Dimension(219, 54));
        listarPorTecnico.setMinimumSize(new java.awt.Dimension(219, 54));
        listarPorTecnico.setPreferredSize(new java.awt.Dimension(219, 54));
        listarPorTecnico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listarPorTecnicoActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(242, 242, 242));
        jLabel3.setText("Tipo:");

        jLabel4.setForeground(new java.awt.Color(242, 242, 242));
        jLabel4.setText("Id técnico:");

        jLabel5.setForeground(new java.awt.Color(242, 242, 242));
        jLabel5.setText("Id técnico:");

        jLabel6.setForeground(new java.awt.Color(242, 242, 242));
        jLabel6.setText("Listar");

        darDeAlta.setBackground(new java.awt.Color(153, 204, 255));
        darDeAlta.setText("Dar de alta");
        darDeAlta.setMaximumSize(new java.awt.Dimension(163, 62));
        darDeAlta.setMinimumSize(new java.awt.Dimension(163, 62));
        darDeAlta.setPreferredSize(new java.awt.Dimension(163, 62));
        darDeAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                darDeAltaActionPerformed(evt);
            }
        });

        detallesIncidencia.setBackground(new java.awt.Color(153, 204, 255));
        detallesIncidencia.setText("Detalles de incidencia");
        detallesIncidencia.setMaximumSize(new java.awt.Dimension(163, 62));
        detallesIncidencia.setMinimumSize(new java.awt.Dimension(163, 62));
        detallesIncidencia.setPreferredSize(new java.awt.Dimension(163, 62));
        detallesIncidencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detallesIncidenciaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(asignarTecnico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldTecnicoAsignar)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(darDeAlta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(detallesIncidencia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPaneTablaGestor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listarPorTipo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldTipo)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(listarEnEspera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(listarPorTecnico, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldTecnicoListar)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(379, 379, 379))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(darDeAlta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88)
                        .addComponent(jLabel5)
                        .addGap(12, 12, 12)
                        .addComponent(jTextFieldTecnicoAsignar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(asignarTecnico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(detallesIncidencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(listarEnEspera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(listarPorTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldTecnicoListar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(listarPorTecnico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPaneTablaGestor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        menuAyuda.setText("Ayuda");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/info.png"))); // NOI18N
        jMenuItem1.setText("Ayuda");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        menuAyuda.add(jMenuItem1);

        jMenuBar1.add(menuAyuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try {
            File f = new File("help" + File.separator + "help_set.hs");
            URL hsURL = f.toURI().toURL();
            HelpSet hs = new HelpSet(getClass().getClassLoader(), hsURL);
            HelpBroker hb = hs.createHelpBroker();
            hb.enableHelpOnButton(jMenuItem1, "main", hs);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void detallesIncidenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detallesIncidenciaActionPerformed
        if (idSeleccionada != null) {
            Incidencia seleccionada = si.getIncidenciaById(idSeleccionada);
            String dispositivo = "";
            String espacio = "";
            String tecnico = "";
            String gestor = "";
            String usuario = "";
            if (seleccionada.getDispositivo() != null) {
                dispositivo = seleccionada.getDispositivo().getMarca() + " " + seleccionada.getDispositivo().getModelo();
            }
            if (seleccionada.getEspacio() != null) {
                espacio = seleccionada.getEspacio().getDescripcion();
            }
            if (seleccionada.getTecnico() != null) {
                tecnico = seleccionada.getTecnico().getNombreApellidos();
            }
            if (seleccionada.getGestor() != null) {
                gestor = seleccionada.getGestor().getNombreApellidos();
            }
            if (seleccionada.getUsuario() != null) {
                usuario = seleccionada.getUsuario().getNombreApellidos();
            }
            JOptionPane.showMessageDialog(
                    null,
                    "ID: " + seleccionada.getId()
                    + "\nEstado: " + seleccionada.getEstado()
                    + "\nTipo: " + seleccionada.getTipo()
                    + "\nDescripción Incidencia: " + seleccionada.getDescIncidencia()
                    + "\nFecha de Entrada: " + seleccionada.getfEntrada()
                    + "\nFecha de Cierre: " + seleccionada.getfCierre()
                    + "\nDescripción Solución: " + seleccionada.getDescSolucion()
                    + "\nDispositivo: " + dispositivo
                    + "\nEspacio: " + espacio
                    + "\nTécnico: " + tecnico
                    + "\nGestor: " + gestor
                    + "\nUsuario: " + usuario,
                    "Detalles de incidencia",
                    JOptionPane.INFORMATION_MESSAGE
            );
            updateTable(strFilter);
        } else {
            JOptionPane.showMessageDialog(
                    null,
                    "Por favor, selecciona una incidencia antes de pulsar el botón",
                    "Error",
                    JOptionPane.ERROR_MESSAGE
            );
        }
    }//GEN-LAST:event_detallesIncidenciaActionPerformed

    private void darDeAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_darDeAltaActionPerformed
        if (idSeleccionada != null) {
            Incidencia seleccionada = si.getIncidenciaById(idSeleccionada);
            if (!seleccionada.getDescSolucion().isBlank() && !seleccionada.getTipo().isBlank()) {
                seleccionada.setEstado("aprobada");
                si.updateIncidencia(seleccionada);
            }
            updateTable(strFilter);
        } else {
            JOptionPane.showMessageDialog(
                    null,
                    "Por favor, selecciona una incidencia antes de pulsar el botón",
                    "Error",
                    JOptionPane.ERROR_MESSAGE
            );
        }
    }//GEN-LAST:event_darDeAltaActionPerformed

    private void asignarTecnicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asignarTecnicoActionPerformed
        if (idSeleccionada != null) {
            if (!jTextFieldTecnicoAsignar.getText().matches(".*[a-zA-Z].*")) {
                Incidencia seleccionada = si.getIncidenciaById(idSeleccionada);
                if (!seleccionada.getTecnico().getId().equals(Integer.valueOf(jTextFieldTecnicoAsignar.getText())) && !jTextFieldTecnicoAsignar.getText().isBlank()) {
                    seleccionada.setTecnico(su.getUsuarioById(Integer.valueOf(jTextFieldTecnicoAsignar.getText())));
                    si.updateIncidencia(seleccionada);
                }
                updateTable(strFilter);
            }
        } else {
            JOptionPane.showMessageDialog(
                    null,
                    "Por favor, selecciona una incidencia antes de pulsar el botón",
                    "Error",
                    JOptionPane.ERROR_MESSAGE
            );
        }
    }//GEN-LAST:event_asignarTecnicoActionPerformed

    private void listarEnEsperaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listarEnEsperaActionPerformed
        strFilter = "espera";
        updateTable(strFilter);
    }//GEN-LAST:event_listarEnEsperaActionPerformed

    private void listarPorTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listarPorTipoActionPerformed
        if (!jTextFieldTipo.getText().isBlank()) {
            strFilter = "tipo";
            updateTable(strFilter);
        } else {
            JOptionPane.showMessageDialog(
                    null,
                    "Por favor, introduzca un tipo",
                    "Error",
                    JOptionPane.ERROR_MESSAGE
            );
        }
    }//GEN-LAST:event_listarPorTipoActionPerformed

    private void listarPorTecnicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listarPorTecnicoActionPerformed
        if (!jTextFieldTecnicoListar.getText().isBlank() && !jTextFieldTecnicoListar.getText().matches(".*[a-zA-Z].*")) {
            strFilter = "tecnico";
            updateTable(strFilter);
        } else {
            JOptionPane.showMessageDialog(
                    null,
                    "Por favor, introduzca un id válido",
                    "Error",
                    JOptionPane.ERROR_MESSAGE
            );
        }
    }//GEN-LAST:event_listarPorTecnicoActionPerformed

    private void updateTable(String filtro) {
        try {
            DefaultTableModel dtm = new DefaultTableModel(new Object[][]{}, new String[]{"ID", "Estado", "Desc."});
            Object[] arr;
            List<Incidencia> incidencias = si.getAllIncidencias();
            for (Incidencia incidencia : incidencias) {
                if (incidencia.getGestor() != null) {
                    if (incidencia.getGestor().getId().equals(usuarioId)) {
                        if ((filtro.equals("espera") && incidencia.getEstado().contains("espera"))
                                || (filtro.equals("tipo") && Objects.equals(incidencia.getTipo(), jTextFieldTipo.getText()))
                                || (filtro.equals("tecnico") && Objects.equals(incidencia.getTecnico().getId(), Integer.valueOf(jTextFieldTecnicoListar.getText())))) {
                            arr = new Object[]{incidencia.getId(), incidencia.getEstado(), incidencia.getDescIncidencia()};
                            dtm.addRow(arr);
                        }
                    }
                }
            }
            tablita.setModel(dtm);
            tablita.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
                @Override
                public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    Component cell = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

                    // Get the ID of the row's corresponding incidencia
                    String estado = incidencias.get(row).getEstado();

                    // Make text bold if ID is in reaperturas
                    if (estado.contains("reapertura")) {
                        cell.setFont(cell.getFont().deriveFont(Font.BOLD));
                    } else if (estado.contains("espera")) {
                        cell.setFont(cell.getFont().deriveFont(Font.ITALIC));
                    } else {
                        cell.setFont(cell.getFont().deriveFont(Font.PLAIN));
                    }
                    return cell;
                }
            });
        } catch (Exception e) {
            JOptionPane.showMessageDialog(
                    null,
                    "Ha habido un error actualizando la tabla: \n" + Arrays.toString(e.getStackTrace()),
                    "Error",
                    JOptionPane.ERROR_MESSAGE
            );
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestorForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestorForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestorForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestorForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestorForm().setVisible(true);
            }
        });
    }

    Integer idSeleccionada;
    String strFilter = "espera";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton asignarTecnico;
    private javax.swing.JButton darDeAlta;
    private javax.swing.JButton detallesIncidencia;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPaneTablaGestor;
    private javax.swing.JTextField jTextFieldTecnicoAsignar;
    private javax.swing.JTextField jTextFieldTecnicoListar;
    private javax.swing.JTextField jTextFieldTipo;
    private javax.swing.JButton listarEnEspera;
    private javax.swing.JButton listarPorTecnico;
    private javax.swing.JButton listarPorTipo;
    private javax.swing.JMenu menuAyuda;
    private javax.swing.JTable tablita;
    // End of variables declaration//GEN-END:variables
}
