package com.ifrr.ticketing.swing;

import com.ifrr.ticketing.entities.Incidencia;
import com.ifrr.ticketing.service.ServiceDispositivo;
import com.ifrr.ticketing.service.ServiceEspacio;
import com.ifrr.ticketing.service.ServiceIncidencia;
import com.ifrr.ticketing.service.ServiceUsuario;
import java.awt.Component;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.net.URL;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.Objects;
import javax.help.HelpBroker;
import javax.help.HelpSet;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author tarde
 */
public class UsuarioForm extends javax.swing.JFrame {

    private final ServiceDispositivo sd;
    private final ServiceEspacio se;
    private final ServiceUsuario su;
    private final ServiceIncidencia si;
    private final Integer usuarioId;

    /**
     * Creates new form UsuarioBasico
     */
    private void updateTable() {
        try {
            DefaultTableModel dtm = new DefaultTableModel(new Object[][]{}, new String[]{"ID", "Estado", "Desc."});
            Object[] arr;
            List<Incidencia> incidencias = si.getAllIncidencias();
            if (incidencias != null && !incidencias.isEmpty()) {
                for (Incidencia incidencia : incidencias) {
                    if (incidencia.getUsuario() != null) {
                        if (Objects.equals(incidencia.getUsuario().getId(), this.usuarioId)) {
                            arr = new Object[]{incidencia.getId(), incidencia.getEstado(), incidencia.getDescIncidencia()};
                            dtm.addRow(arr);
                        }
                    }
                }
            }
            tablita.setModel(dtm);
            tablita.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
                @Override
                public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    Component cell = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

                    // Get the ID of the row's corresponding incidencia
                    String estado = incidencias.get(row).getEstado();

                    // Make text bold if ID is in reaperturas
                    if (estado.contains("reapertura")) {
                        cell.setFont(cell.getFont().deriveFont(Font.BOLD));
                    } else if (estado.contains("espera")) {
                        cell.setFont(cell.getFont().deriveFont(Font.ITALIC));
                    } else {
                        cell.setFont(cell.getFont().deriveFont(Font.PLAIN));
                    }
                    return cell;
                }
            });
        } catch (Exception e) {
            JOptionPane.showMessageDialog(
                    null,
                    "Ha habido un error actualizando la tabla: \n" + Arrays.toString(e.getStackTrace()),
                    "Error",
                    JOptionPane.ERROR_MESSAGE
            );
            e.printStackTrace();
        }
    }


    public UsuarioForm(ServiceDispositivo sd, ServiceEspacio se, ServiceUsuario su, ServiceIncidencia si, Integer usuarioId) {
        this.sd = sd;
        this.se = se;
        this.su = su;
        this.si = si;
        this.usuarioId = usuarioId;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        BotonAniadirInci = new javax.swing.JButton();
        BotonRecargar = new javax.swing.JButton();
        BotonConsultarInci = new javax.swing.JButton();
        BotonSolicitar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablita = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuAyuda = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("¡Bienvenido Usuario!");
        jLabel1.setMaximumSize(new java.awt.Dimension(200, 200));
        jLabel1.setMinimumSize(new java.awt.Dimension(200, 200));
        jLabel1.setPreferredSize(new java.awt.Dimension(200, 200));

        BotonAniadirInci.setBackground(new java.awt.Color(153, 204, 255));
        BotonAniadirInci.setText("Añadir incidencia");
        BotonAniadirInci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAniadirInciActionPerformed(evt);
            }
        });

        BotonRecargar.setBackground(new java.awt.Color(153, 204, 255));
        BotonRecargar.setText("Recargar lista");
        BotonRecargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRecargarActionPerformed(evt);
            }
        });

        BotonConsultarInci.setBackground(new java.awt.Color(153, 204, 255));
        BotonConsultarInci.setText("Detalles incidencia");
        BotonConsultarInci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonConsultarInciActionPerformed(evt);
            }
        });

        BotonSolicitar.setBackground(new java.awt.Color(153, 204, 255));
        BotonSolicitar.setText("Solicitar reapertura de incidencia");
        BotonSolicitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonSolicitarActionPerformed(evt);
            }
        });

        tablita.setBackground(new java.awt.Color(153, 204, 255));
        tablita.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Estado", "Desc."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablita.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablitaMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tablita);
        if (tablita.getColumnModel().getColumnCount() > 0) {
            tablita.getColumnModel().getColumn(0).setResizable(false);
            tablita.getColumnModel().getColumn(1).setResizable(false);
            tablita.getColumnModel().getColumn(2).setResizable(false);
        }
        updateTable();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BotonAniadirInci, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonConsultarInci, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BotonRecargar, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonSolicitar, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(439, 439, 439)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BotonSolicitar, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(188, 188, 188)
                        .addComponent(BotonRecargar, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(132, 132, 132))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(37, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BotonAniadirInci, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(179, 179, 179)
                .addComponent(BotonConsultarInci, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(134, 134, 134))
        );

        menuAyuda.setText("Ayuda");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/info.png"))); // NOI18N
        jMenuItem1.setText("Ayuda");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        menuAyuda.add(jMenuItem1);

        jMenuBar1.add(menuAyuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tablitaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablitaMousePressed
        JTable source = (JTable) evt.getSource();
        int fila = source.rowAtPoint(evt.getPoint());
        idSeleccionada = (Integer) source.getModel().getValueAt(fila, 0);
    }//GEN-LAST:event_tablitaMousePressed

    private void BotonConsultarInciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonConsultarInciActionPerformed
        if (idSeleccionada != null) {
            Incidencia seleccionada = si.getIncidenciaById(idSeleccionada);
            JOptionPane.showMessageDialog(
                    null,
                    "ID: " + seleccionada.getId()
                    + "\nEstado: " + seleccionada.getEstado()
                    + "\nTipo: " + seleccionada.getTipo()
                    + "\nDescripción Incidencia: " + seleccionada.getDescIncidencia()
                    + "\nFecha de Entrada: " + seleccionada.getfEntrada()
                    + "\nFecha de Cierre: " + seleccionada.getfCierre()
                    + "\nDescripción Solución: " + seleccionada.getDescSolucion()
                    + "\nDispositivo: " + seleccionada.getDispositivo().getMarca() + " " + seleccionada.getDispositivo().getModelo()
                    + "\nEspacio: " + seleccionada.getEspacio().getDescripcion()
                    + "\nTécnico: " + seleccionada.getTecnico().getNombreApellidos()
                    + "\nGestor: " + seleccionada.getGestor().getNombreApellidos()
                    + "\nUsuario: " + seleccionada.getUsuario().getNombreApellidos(),
                    "Detalles de incidencia",
                    JOptionPane.INFORMATION_MESSAGE
            );
            updateTable();
        } else {
            JOptionPane.showMessageDialog(
                    null,
                    "Por favor, selecciona una incidencia antes de pulsar el botón",
                    "Error",
                    JOptionPane.ERROR_MESSAGE
            );
        }
    }//GEN-LAST:event_BotonConsultarInciActionPerformed

    private void BotonAniadirInciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAniadirInciActionPerformed
        new CreateIncidencia(this, true, sd, se, su, si, usuarioId).setVisible(true);
        updateTable();
    }//GEN-LAST:event_BotonAniadirInciActionPerformed

    private void BotonRecargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRecargarActionPerformed
        updateTable();
    }//GEN-LAST:event_BotonRecargarActionPerformed

    private void BotonSolicitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonSolicitarActionPerformed
        try {
            if (idSeleccionada != null) {
                if (si.getIncidenciaById(idSeleccionada).getEstado().contains("cerrada")) {
                    Incidencia in = si.getIncidenciaById(idSeleccionada);
                    in.setEstado("solicitando reapertura");
                    si.updateIncidencia(in);
                    JOptionPane.showMessageDialog(
                            null,
                            "Se ha solicitado la reapertura de la incidencia con la ID: " + idSeleccionada,
                            "Reapertura Solicitada",
                            JOptionPane.INFORMATION_MESSAGE
                    );
                    updateTable();
                } else {
                    JOptionPane.showMessageDialog(
                            null,
                            "La incidencia no está cerrada",
                            "Error",
                            JOptionPane.ERROR_MESSAGE
                    );
                }
            } else {
                JOptionPane.showMessageDialog(
                        null,
                        "Por favor, selecciona una incidencia antes de pulsar el botón",
                        "Error",
                        JOptionPane.ERROR_MESSAGE
                );
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_BotonSolicitarActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try {
            File f = new File("help" + File.separator + "help_set.hs");
            URL hsURL = f.toURI().toURL();
            HelpSet hs = new HelpSet(getClass().getClassLoader(), hsURL);
            HelpBroker hb = hs.createHelpBroker();
            hb.enableHelpOnButton(jMenuItem1, "main", hs);
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jMenuItem1ActionPerformed


    Integer idSeleccionada;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonAniadirInci;
    private javax.swing.JButton BotonConsultarInci;
    private javax.swing.JButton BotonRecargar;
    private javax.swing.JButton BotonSolicitar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu menuAyuda;
    private javax.swing.JTable tablita;
    // End of variables declaration//GEN-END:variables
}
